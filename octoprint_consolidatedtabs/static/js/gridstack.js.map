{"version":3,"file":"gridstack.js","sourceRoot":"","sources":["../src/gridstack.ts"],"names":[],"mappings":"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","sourcesContent":["// gridstack.ts 2.0.0-rc @preserve\r\n\r\n/**\r\n * https://gridstackjs.com/\r\n * (c) 2014-2020 Alain Dumesny, Dylan Weiss, Pavel Reznikov\r\n * gridstack.js may be freely distributed under the MIT license.\r\n*/\r\nimport './gridstack-poly.js';\r\n\r\nimport { GridStackEngine } from './gridstack-engine';\r\nimport { obsoleteOpts, obsoleteOptsDel, obsoleteAttr, obsolete, Utils } from './utils';\r\nimport { GridItemHTMLElement, GridStackWidget, GridStackNode, GridstackOptions, numberOrString } from './types';\r\nimport { GridStackDD } from './gridstack-dd';\r\n\r\n// export all dependent file as well to make it easier for users to just import the main file\r\nexport * from './types';\r\nexport * from './utils';\r\nexport * from './gridstack-engine';\r\nexport * from './gridstack-dd';\r\n\r\n// TEMPORARY import the jquery-ui drag&drop since we don't have alternative yet and don't expect users to create their own yet\r\nimport './jq/gridstack-dd-jqueryui';\r\nexport * from './jq/gridstack-dd-jqueryui';\r\n\r\nexport type GridStackElement = string | HTMLElement | GridItemHTMLElement;\r\n\r\nexport interface GridHTMLElement extends HTMLElement {\r\n  gridstack?: GridStack; // grid's parent DOM element points back to grid class\r\n}\r\nexport type GridStackEvent = 'added' | 'change' | 'disable' | 'dragstart' | 'dragstop' | 'dropped' |\r\n  'enable' | 'removed' | 'resizestart' | 'resizestop';\r\n\r\n/** Defines the coordinates of an object */\r\nexport interface MousePosition {\r\n  top: number;\r\n  left: number;\r\n}\r\n\r\n/** Defines the position of a cell inside the grid*/\r\nexport interface CellPosition {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\ninterface GridCSSStyleSheet extends CSSStyleSheet {\r\n  _max?: number; // internal tracker of the max # of rows we created\r\n}\r\n\r\n/**\r\n * Main gridstack class - you will need to call `GridStack.init()` first to initialize your grid.\r\n * Note: your grid elements MUST have the following classes for the CSS layout to work:\r\n * @example\r\n * <div class=\"grid-stack\">\r\n *   <div class=\"grid-stack-item\">\r\n *     <div class=\"grid-stack-item-content\">Item 1</div>\r\n *   </div>\r\n * </div>\r\n */\r\nexport class GridStack {\r\n\r\n  /**\r\n   * initializing the HTML element, or selector string, into a grid will return the grid. Calling it again will\r\n   * simply return the existing instance (ignore any passed options). There is also an initAll() version that support\r\n   * multiple grids initialization at once.\r\n   * @param options grid options (optional)\r\n   * @param elOrString element or CSS selector (first one used) to convert to a grid (default to '.grid-stack' class selector)\r\n   *\r\n   * @example\r\n   * let grid = GridStack.init();\r\n   *\r\n   * Note: the HTMLElement (of type GridHTMLElement) will store a `gridstack: GridStack` value that can be retrieve later\r\n   * let grid = document.querySelector('.grid-stack').gridstack;\r\n   */\r\n  public static init(options: GridstackOptions = {}, elOrString: GridStackElement = '.grid-stack'): GridStack {\r\n    let el = GridStack.getGridElement(elOrString);\r\n    if (!el) {\r\n      if (typeof elOrString === 'string') {\r\n        console.log('gridstack.js: init() no grid was found. Did you forget class ' + elOrString + ' on your element ?' +\r\n        '\\n\".grid-stack\" is required for proper CSS styling and drag/drop.');\r\n      } else {\r\n        console.log('gridstack.js: init() no grid element was passed.');\r\n      }\r\n      return null;\r\n    }\r\n    if (!el.gridstack) {\r\n      el.gridstack = new GridStack(el, Utils.clone(options));\r\n    }\r\n    return el.gridstack\r\n  }\r\n\r\n  /**\r\n   * Will initialize a list of elements (given a selector) and return an array of grids.\r\n   * @param options grid options (optional)\r\n   * @param selector elements selector to convert to grids (default to '.grid-stack' class selector)\r\n   *\r\n   * @example\r\n   * let grids = GridStack.initAll();\r\n   * grids.forEach(...)\r\n   */\r\n  public static initAll(options: GridstackOptions = {}, selector = '.grid-stack'): GridStack[] {\r\n    let grids: GridStack[] = [];\r\n    GridStack.getGridElements(selector).forEach(el => {\r\n      if (!el.gridstack) {\r\n        el.gridstack = new GridStack(el, Utils.clone(options));\r\n      }\r\n      grids.push(el.gridstack);\r\n    });\r\n    if (grids.length === 0) {\r\n      console.log('gridstack.js: initAll() no grid was found. Did you forget class ' + selector + ' on your element ?' +\r\n      '\\n\".grid-stack\" is required for proper CSS styling and drag/drop.');\r\n    }\r\n    return grids;\r\n  }\r\n\r\n  /** scoping so users can call GridStack.Utils.sort() for example */\r\n  public static Utils = Utils;\r\n\r\n  /** scoping so users can call new GridStack.Engine(12) for example */\r\n  public static Engine = GridStackEngine;\r\n\r\n  /** the HTML element tied to this grid after it's been initialized */\r\n  public el: GridHTMLElement;\r\n\r\n  /** engine used to implement non DOM grid functionality */\r\n  public engine: GridStackEngine;\r\n\r\n  /** grid options - public for classes to access, but use methods to modify! */\r\n  public opts: GridstackOptions;\r\n\r\n  /** current drag&drop plugin being used */\r\n  public dd: GridStackDD;\r\n\r\n  /** @internal */\r\n  private placeholder: HTMLElement;\r\n  /** @internal */\r\n  private _oneColumnMode: boolean;\r\n  /** @internal */\r\n  private _prevColumn: number;\r\n  /** @internal */\r\n  private _stylesId: string;\r\n  /** @internal */\r\n  private _gsEventHandler = {};\r\n  /** @internal */\r\n  private _styles: GridCSSStyleSheet;\r\n  /** @internal flag to keep cells square during resize */\r\n  private _isAutoCellHeight: boolean;\r\n\r\n  /**\r\n   * Construct a grid item from the given element and options\r\n   * @param el\r\n   * @param opts\r\n   */\r\n  public constructor(el: GridHTMLElement, opts: GridstackOptions = {}) {\r\n    this.el = el; // exposed HTML element to the user\r\n    opts = opts || {}; // handles null/undefined/0\r\n\r\n    obsoleteOpts(opts, 'width', 'column', 'v0.5.3');\r\n    obsoleteOpts(opts, 'height', 'maxRow', 'v0.5.3');\r\n    obsoleteOpts(opts, 'verticalMargin', 'margin', 'v2.0');\r\n    obsoleteOptsDel(opts, 'oneColumnModeClass', 'v0.6.3', '. Use class `.grid-stack-1` instead');\r\n\r\n    // container attributes\r\n    obsoleteAttr(this.el, 'data-gs-width', 'data-gs-column', 'v0.5.3');\r\n    obsoleteAttr(this.el, 'data-gs-height', 'data-gs-max-row', 'v0.5.3');\r\n    obsoleteAttr(this.el, 'data-gs-current-height', 'data-gs-current-row', 'v1.0.0');\r\n\r\n    // if row property exists, replace minRow and maxRow instead\r\n    if (opts.row) {\r\n      opts.minRow = opts.maxRow = opts.row;\r\n      delete opts.row;\r\n    }\r\n    let rowAttr = Utils.toNumber(el.getAttribute('data-gs-row'));\r\n\r\n    // elements attributes override any passed options (like CSS style) - merge the two together\r\n    let defaults: GridstackOptions = {\r\n      column: Utils.toNumber(el.getAttribute('data-gs-column')) || 12,\r\n      minRow: rowAttr ? rowAttr : Utils.toNumber(el.getAttribute('data-gs-min-row')) || 0,\r\n      maxRow: rowAttr ? rowAttr : Utils.toNumber(el.getAttribute('data-gs-max-row')) || 0,\r\n      itemClass: 'grid-stack-item',\r\n      placeholderClass: 'grid-stack-placeholder',\r\n      placeholderText: '',\r\n      handle: '.grid-stack-item-content',\r\n      handleClass: null,\r\n      styleInHead: false,\r\n      cellHeight: 'auto',\r\n      margin: 10,\r\n      auto: true,\r\n      minWidth: 768,\r\n      float: false,\r\n      staticGrid: false,\r\n      _class: 'grid-stack-instance-' + (Math.random() * 10000).toFixed(0),\r\n      animate: Utils.toBool(el.getAttribute('data-gs-animate')) || false,\r\n      alwaysShowResizeHandle: false,\r\n      resizable: {\r\n        autoHide: !(opts.alwaysShowResizeHandle || false),\r\n        handles: 'se'\r\n      },\r\n      draggable: {\r\n        handle: (opts.handleClass ? '.' + opts.handleClass : (opts.handle ? opts.handle : '')) || '.grid-stack-item-content',\r\n        scroll: false,\r\n        appendTo: 'body'\r\n      },\r\n      dragIn: undefined,\r\n      dragInOptions : {\r\n        revert: 'invalid',\r\n        handle: '.grid-stack-item-content',\r\n        scroll: false,\r\n        appendTo: 'body'\r\n      },\r\n      disableDrag: false,\r\n      disableResize: false,\r\n      rtl: 'auto',\r\n      removable: false,\r\n      removableOptions: {\r\n        accept: '.' + (opts.itemClass || 'grid-stack-item')\r\n      },\r\n      removeTimeout: 2000,\r\n      marginUnit: 'px',\r\n      cellHeightUnit: 'px',\r\n      disableOneColumnMode: false,\r\n      oneColumnModeDomSort: false\r\n    };\r\n\r\n    this.opts = Utils.defaults(opts, defaults);\r\n    this.initMargin();\r\n\r\n    if (this.opts.ddPlugin === false) {\r\n      this.opts.ddPlugin = GridStackDD;\r\n    } else if (this.opts.ddPlugin === undefined) {\r\n      this.opts.ddPlugin = GridStackDD.get();\r\n    }\r\n    this.dd = new (this.opts.ddPlugin as typeof GridStackDD)(this);\r\n\r\n    if (this.opts.rtl === 'auto') {\r\n      this.opts.rtl = el.style.direction === 'rtl';\r\n    }\r\n\r\n    if (this.opts.rtl) {\r\n      this.el.classList.add('grid-stack-rtl');\r\n    }\r\n\r\n    this.opts._isNested = Utils.closestByClass(this.el, opts.itemClass) !== null;\r\n    if (this.opts._isNested) {\r\n      this.el.classList.add('grid-stack-nested');\r\n    }\r\n\r\n    this._isAutoCellHeight = (this.opts.cellHeight === 'auto');\r\n    if (this._isAutoCellHeight) {\r\n      // make the cell content square initially (will use resize event to keep it square)\r\n      let marginDiff = - (this.opts.marginRight as number) - (this.opts.marginLeft as number)\r\n        + (this.opts.marginTop as number) + (this.opts.marginBottom as number);\r\n      this.cellHeight(this.cellWidth() + marginDiff, false);\r\n    } else {\r\n      this.cellHeight(this.opts.cellHeight, false);\r\n    }\r\n\r\n    this.el.classList.add(this.opts._class);\r\n\r\n    this._setStaticClass();\r\n\r\n    this._initStyles();\r\n\r\n    this.engine = new GridStackEngine(this.opts.column, (cbNodes, removeDOM = true) => {\r\n      let maxHeight = 0;\r\n      this.engine.nodes.forEach(n => { maxHeight = Math.max(maxHeight, n.y + n.height) });\r\n      cbNodes.forEach(n => {\r\n        let el = n.el;\r\n        if (removeDOM && n._id === null) {\r\n          if (el && el.parentNode) { el.parentNode.removeChild(el) }\r\n        } else {\r\n          this._writeAttrs(el, n.x, n.y, n.width, n.height);\r\n        }\r\n      });\r\n      this._updateStyles(maxHeight + 10);\r\n    },\r\n    this.opts.float,\r\n    this.opts.maxRow);\r\n\r\n    if (this.opts.auto) {\r\n      let elements: {el: HTMLElement; i: number}[] = [];\r\n      this.getGridItems().forEach(el => {\r\n        let x = parseInt(el.getAttribute('data-gs-x'));\r\n        let y = parseInt(el.getAttribute('data-gs-y'));\r\n        elements.push({\r\n          el,\r\n          // if x,y are missing (autoPosition) add them to end of list - but keep their respective DOM order\r\n          i: (Number.isNaN(x) ? 1000 : x) + (Number.isNaN(y) ? 1000 : y) * this.opts.column\r\n        });\r\n      });\r\n      elements.sort(e => e.i).forEach(item => { this._prepareElement(item.el) });\r\n    }\r\n    this.engine.saveInitial(); // initial start of items\r\n\r\n    this.setAnimation(this.opts.animate);\r\n\r\n    let placeholderChild = document.createElement('div');\r\n    placeholderChild.className = 'placeholder-content';\r\n    placeholderChild.innerHTML = this.opts.placeholderText;\r\n    this.placeholder = document.createElement('div');\r\n    this.placeholder.classList.add(this.opts.placeholderClass, this.opts.itemClass);\r\n    this.placeholder.appendChild(placeholderChild);\r\n\r\n    this._updateContainerHeight();\r\n\r\n    window.addEventListener('resize', this._onResizeHandler.bind(this));\r\n    this._onResizeHandler();\r\n\r\n    this._setupDragIn();\r\n    this._setupRemoveDrop();\r\n    this._setupAcceptWidget();\r\n  };\r\n\r\n\r\n  /**\r\n   * add a new widget and returns it.\r\n   *\r\n   * Widget will be always placed even if result height is more than actual grid height.\r\n   * You need to use willItFit method before calling addWidget for additional check.\r\n   * See also `makeWidget()`.\r\n   *\r\n   * @example\r\n   * let grid = GridStack.init();\r\n   * grid.addWidget('<div><div class=\"grid-stack-item-content\">hello</div></div>', {width: 3});\r\n   *\r\n   * @param el html element or string definition to add\r\n   * @param options widget position/size options (optional) - see GridStackWidget\r\n   */\r\n  public addWidget(el: GridStackElement, options?: GridStackWidget): GridItemHTMLElement {\r\n\r\n    // support legacy call for now ?\r\n    if (arguments.length > 2) {\r\n      console.warn('gridstack.ts: `addWidget(el, x, y, width...)` is deprecated. Use `addWidget(el, {x, y, width,...})`. It will be removed soon');\r\n      // eslint-disable-next-line prefer-rest-params\r\n      let a = arguments, i = 1,\r\n        opt: GridStackWidget = { x:a[i++], y:a[i++], width:a[i++], height:a[i++], autoPosition:a[i++],\r\n          minWidth:a[i++], maxWidth:a[i++], minHeight:a[i++], maxHeight:a[i++], id:a[i++] };\r\n      return this.addWidget(el, opt);\r\n    }\r\n\r\n    if (typeof el === 'string') {\r\n      let doc = document.implementation.createHTMLDocument();\r\n      doc.body.innerHTML = el;\r\n      el = doc.body.children[0] as HTMLElement;\r\n    }\r\n\r\n    // Tempting to initialize the passed in opt with default and valid values, but this break knockout demos\r\n    // as the actual value are filled in when _prepareElement() calls el.getAttribute('data-gs-xyz) before adding the node.\r\n    if (options) {\r\n      // make sure we load any DOM attributes that are not specified in passed in options (which override)\r\n      let domAttr = this._readAttr(el);\r\n      Utils.defaults(options, domAttr);\r\n      this.engine.prepareNode(options);\r\n      this._writeAttr(el, options);\r\n    }\r\n\r\n    this.el.appendChild(el);\r\n    return this.makeWidget(el);\r\n  }\r\n\r\n  /** saves the current layout returning a list of widgets for serialization */\r\n  public save(): GridStackWidget[] { return this.engine.save(); }\r\n\r\n  /**\r\n   * load the widgets from a list. This will call update() on each (matching by id) or add/remove widgets that are not there.\r\n   *\r\n   * @param layout list of widgets definition to update/create\r\n   * @param addAndRemove boolean (default true) or callback method can be passed to control if and how missing widgets can be added/removed, giving\r\n   * the user control of insertion.\r\n   *\r\n   * @example\r\n   * see http://gridstackjs.com/demo/serialization.html\r\n   **/\r\n  public load(layout: GridStackWidget[], addAndRemove: boolean | ((w: GridStackWidget, add: boolean) => void)  = true) {\r\n    let items = GridStack.Utils.sort(layout);\r\n    this.batchUpdate();\r\n    // see if any items are missing from new layout and need to be removed first\r\n    if (addAndRemove) {\r\n      this.engine.nodes.forEach(n => {\r\n        let item = items.find(w => n.id === w.id);\r\n        if (!item) {\r\n          if (typeof(addAndRemove) === 'function') {\r\n            addAndRemove(n, false);\r\n          } else {\r\n            this.removeWidget(n.el);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    // now add/update the widgets\r\n    items.forEach(w => {\r\n      let item = this.engine.nodes.find(n => n.id === w.id);\r\n      if (item) {\r\n        this.update(item.el, w.x, w.y, w.width, w.height); // TODO: full update\r\n      } else if (addAndRemove) {\r\n        if (typeof(addAndRemove) === 'function') {\r\n          addAndRemove(w, true);\r\n        } else {\r\n          this.addWidget('<div><div class=\"grid-stack-item-content\"></div></div>', w);\r\n        }\r\n      }\r\n    });\r\n    this.commit();\r\n  }\r\n\r\n  /**\r\n   * Initializes batch updates. You will see no changes until `commit()` method is called.\r\n   */\r\n  public batchUpdate(): GridStack {\r\n    this.engine.batchUpdate();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Gets current cell height.\r\n   */\r\n  public getCellHeight(): number {\r\n    if (this.opts.cellHeight && this.opts.cellHeight !== 'auto') {\r\n      return this.opts.cellHeight as number;\r\n    }\r\n    // else get first cell height\r\n    // or do entire grid and # of rows ? (this.el.getBoundingClientRect().height) / parseInt(this.el.getAttribute('data-gs-current-row'))\r\n    let el = this.el.querySelector('.' + this.opts.itemClass) as HTMLElement;\r\n    let height = Utils.toNumber(el.getAttribute('data-gs-height'));\r\n    return Math.round(el.offsetHeight / height);\r\n  }\r\n\r\n  /**\r\n   * Update current cell height - see `GridstackOptions.cellHeight` for format.\r\n   * This method rebuilds an internal CSS style sheet.\r\n   * Note: You can expect performance issues if call this method too often.\r\n   *\r\n   * @param val the cell height\r\n   * @param update (Optional) if false, styles will not be updated\r\n   *\r\n   * @example\r\n   * grid.cellHeight(grid.cellWidth() * 1.2);\r\n   */\r\n  public cellHeight(val: numberOrString, update = true): GridStack {\r\n    let data = Utils.parseHeight(val);\r\n    if (this.opts.cellHeightUnit === data.unit && this.opts.cellHeight === data.height) {\r\n      return this;\r\n    }\r\n    this.opts.cellHeightUnit = data.unit;\r\n    this.opts.cellHeight = data.height;\r\n\r\n    if (update) {\r\n      this._updateStyles();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Gets current cell width.\r\n   */\r\n  public cellWidth(): number {\r\n    return this.el.offsetWidth / this.opts.column;\r\n  }\r\n\r\n  /**\r\n   * Finishes batch updates. Updates DOM nodes. You must call it after batchUpdate.\r\n   */\r\n  public commit(): GridStack {\r\n    this.engine.commit();\r\n    this._triggerRemoveEvent();\r\n    this._triggerAddEvent();\r\n    this._triggerChangeEvent();\r\n    return this;\r\n  };\r\n\r\n  /** re-layout grid items to reclaim any empty space */\r\n  public compact(): GridStack {\r\n    this.engine.compact();\r\n    this._triggerChangeEvent();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * set the number of columns in the grid. Will update existing widgets to conform to new number of columns,\r\n   * as well as cache the original layout so you can revert back to previous positions without loss.\r\n   * Requires `gridstack-extra.css` or `gridstack-extra.min.css` for [1-11],\r\n   * else you will need to generate correct CSS (see https://github.com/gridstack/gridstack.js#change-grid-columns)\r\n   * @param column - Integer > 0 (default 12).\r\n   * @param doNotPropagate if true existing widgets will not be updated (optional)\r\n   */\r\n  public column(column: number, doNotPropagate?: boolean): GridStack {\r\n    if (this.opts.column === column) { return this; }\r\n    let oldColumn = this.opts.column;\r\n\r\n    // if we go into 1 column mode (which happens if we're sized less than minWidth unless disableOneColumnMode is on)\r\n    // then remember the original columns so we can restore.\r\n    if (column === 1) {\r\n      this._prevColumn = oldColumn;\r\n    } else {\r\n      delete this._prevColumn;\r\n    }\r\n\r\n    this.el.classList.remove('grid-stack-' + oldColumn);\r\n    this.el.classList.add('grid-stack-' + column);\r\n    this.opts.column = this.engine.column = column;\r\n\r\n    if (doNotPropagate === true) { return this; }\r\n\r\n    // update the items now - see if the dom order nodes should be passed instead (else default to current list)\r\n    let domNodes: GridStackNode[] = undefined; // explicitly leave not defined\r\n    if (column === 1 && this.opts.oneColumnModeDomSort) {\r\n      domNodes = [];\r\n      this.getGridItems().forEach(el => {\r\n        if (el.gridstackNode) { domNodes.push(el.gridstackNode); }\r\n      });\r\n      if (!domNodes.length) { domNodes = undefined; }\r\n    }\r\n    this.engine.updateNodeWidths(oldColumn, column, domNodes);\r\n\r\n    // and trigger our event last...\r\n    this._triggerChangeEvent(true); // skip layout update\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * get the number of columns in the grid (default 12)\r\n   */\r\n  public getColumn(): number {\r\n    return this.opts.column;\r\n  }\r\n\r\n  /** returns an array of grid HTML elements (no placeholder) - used to iterate through our children */\r\n  public getGridItems(): GridItemHTMLElement[] {\r\n    return Array.from(this.el.children)\r\n      .filter((el: HTMLElement) => el.matches('.' + this.opts.itemClass) && !el.matches('.' + this.opts.placeholderClass)) as GridItemHTMLElement[];\r\n  }\r\n\r\n  /**\r\n   * Destroys a grid instance.\r\n   * @param removeDOM if `false` grid and items elements will not be removed from the DOM (Optional. Default `true`).\r\n   */\r\n  public destroy(removeDOM = true): GridStack {\r\n    window.removeEventListener('resize', this._onResizeHandler);\r\n    this.disable();\r\n    if (!removeDOM) {\r\n      this.removeAll(removeDOM);\r\n      this.el.classList.remove(this.opts._class);\r\n      delete this.el.gridstack;\r\n    } else {\r\n      this.el.parentNode.removeChild(this.el);\r\n    }\r\n    Utils.removeStylesheet(this._stylesId);\r\n    delete this.engine;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Disables widgets moving/resizing. This is a shortcut for:\r\n   * @example\r\n   *  grid.enableMove(false);\r\n   *  grid.enableResize(false);\r\n   */\r\n  public disable(): GridStack {\r\n    this.enableMove(false);\r\n    this.enableResize(false);\r\n    this._triggerEvent('disable');\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Enables widgets moving/resizing. This is a shortcut for:\r\n   * @example\r\n   *  grid.enableMove(true);\r\n   *  grid.enableResize(true);\r\n   */\r\n  public enable(): GridStack {\r\n    this.enableMove(true);\r\n    this.enableResize(true);\r\n    this._triggerEvent('enable');\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Enables/disables widget moving.\r\n   *\r\n   * @param doEnable\r\n   * @param includeNewWidgets will force new widgets to be draggable as per\r\n   * doEnable`s value by changing the disableDrag grid option (default: true).\r\n   */\r\n  public enableMove(doEnable: boolean, includeNewWidgets = true): GridStack {\r\n    this.getGridItems().forEach(el => this.movable(el, doEnable));\r\n    if (includeNewWidgets) {\r\n      this.opts.disableDrag = !doEnable;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Enables/disables widget resizing\r\n   * @param doEnable\r\n   * @param includeNewWidgets will force new widgets to be draggable as per\r\n   * doEnable`s value by changing the disableResize grid option (default: true).\r\n   */\r\n  public enableResize(doEnable: boolean, includeNewWidgets = true): GridStack {\r\n    this.getGridItems().forEach(el => this.resizable(el, doEnable));\r\n    if (includeNewWidgets) {\r\n      this.opts.disableResize = !doEnable;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * enable/disable floating widgets (default: `false`) See [example](http://gridstackjs.com/demo/float.html)\r\n   */\r\n  public float(val: boolean): GridStack {\r\n    /*\r\n    if (val === undefined) {\r\n      // TODO: should we support and/or change signature ? figure this soon...\r\n      console.warn('gridstack.ts: getter `float()` is deprecated in 2.x and has been replaced by `getFloat()`. It will be **completely** removed soon');\r\n      return this.getFloat();\r\n    }\r\n    */\r\n    this.engine.float = val;\r\n    this._triggerChangeEvent();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * get the current float mode\r\n   */\r\n  public getFloat(): boolean {\r\n    return this.engine.float;\r\n  }\r\n\r\n  /**\r\n   * Get the position of the cell under a pixel on screen.\r\n   * @param position the position of the pixel to resolve in\r\n   * absolute coordinates, as an object with top and left properties\r\n   * @param useDocRelative if true, value will be based on document position vs parent position (Optional. Default false).\r\n   * Useful when grid is within `position: relative` element\r\n   *\r\n   * Returns an object with properties `x` and `y` i.e. the column and row in the grid.\r\n   */\r\n  public getCellFromPixel(position: MousePosition, useDocRelative = false): CellPosition {\r\n    let box = this.el.getBoundingClientRect();\r\n    // console.log(`getBoundingClientRect left: ${box.left} top: ${box.top} w: ${box.width} h: ${box.height}`)\r\n    let containerPos;\r\n    if (useDocRelative) {\r\n      containerPos = {top: box.top + document.documentElement.scrollTop, left: box.left};\r\n      // console.log(`getCellFromPixel scrollTop: ${document.documentElement.scrollTop}`)\r\n    } else {\r\n      containerPos = {top: this.el.offsetTop, left: this.el.offsetLeft}\r\n      // console.log(`getCellFromPixel offsetTop: ${containerPos.left} offsetLeft: ${containerPos.top}`)\r\n    }\r\n    let relativeLeft = position.left - containerPos.left;\r\n    let relativeTop = position.top - containerPos.top;\r\n\r\n    let columnWidth = (box.width / this.opts.column);\r\n    let rowHeight = (box.height / parseInt(this.el.getAttribute('data-gs-current-row')));\r\n\r\n    return {x: Math.floor(relativeLeft / columnWidth), y: Math.floor(relativeTop / rowHeight)};\r\n  }\r\n\r\n  /** returns the current number of rows, which will be at least `minRow` if set */\r\n  public getRow(): number {\r\n    return Math.max(this.engine.getRow(), this.opts.minRow);\r\n  }\r\n\r\n  /**\r\n   * Checks if specified area is empty.\r\n   * @param x the position x.\r\n   * @param y the position y.\r\n   * @param width the width of to check\r\n   * @param height the height of to check\r\n   */\r\n  public isAreaEmpty(x: number, y: number, width: number, height: number): boolean {\r\n    return this.engine.isAreaEmpty(x, y, width, height);\r\n  }\r\n\r\n  /**\r\n   * Locks/unlocks widget.\r\n   * @param el element or selector to modify.\r\n   * @param val if true widget will be locked.\r\n   */\r\n  public locked(els: GridStackElement, val: boolean): GridStack {\r\n    this.getElements(els).forEach(el => {\r\n      let node = el.gridstackNode;\r\n      if (!node) return;\r\n      node.locked = (val || false);\r\n      if (node.locked) {\r\n        el.setAttribute('data-gs-locked', 'yes');\r\n      } else {\r\n        el.removeAttribute('data-gs-locked');\r\n      }\r\n    });\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * If you add elements to your grid by hand, you have to tell gridstack afterwards to make them widgets.\r\n   * If you want gridstack to add the elements for you, use `addWidget()` instead.\r\n   * Makes the given element a widget and returns it.\r\n   * @param els widget or single selector to convert.\r\n   *\r\n   * @example\r\n   * let grid = GridStack.init();\r\n   * grid.el.appendChild('<div id=\"gsi-1\" data-gs-width=\"3\"></div>');\r\n   * grid.makeWidget('gsi-1');\r\n   */\r\n  public makeWidget(els: GridStackElement): GridItemHTMLElement {\r\n    let el = this.getElement(els);\r\n    this._prepareElement(el, true);\r\n    this._updateContainerHeight();\r\n    this._triggerAddEvent();\r\n    this._triggerChangeEvent();\r\n    return el;\r\n  }\r\n\r\n  /**\r\n   * Set the maxWidth for a widget.\r\n   * @param els widget or selector to modify.\r\n   * @param val A numeric value of the number of columns\r\n   */\r\n  public maxWidth(els: GridStackElement, val: number): GridStack {\r\n    this.getElements(els).forEach(el => {\r\n      let node = el.gridstackNode;\r\n      if (!node) { return }\r\n      node.maxWidth = (val || undefined);\r\n      if (val) {\r\n        el.setAttribute('data-gs-max-width', String(val));\r\n      } else {\r\n        el.removeAttribute('data-gs-max-width');\r\n      }\r\n    });\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Set the minWidth for a widget.\r\n   * @param els widget or selector to modify.\r\n   * @param val A numeric value of the number of columns\r\n   */\r\n  public minWidth(els: GridStackElement, val: number): GridStack {\r\n    this.getElements(els).forEach(el => {\r\n      let node = el.gridstackNode;\r\n      if (!node) { return }\r\n      if (val) {\r\n        el.setAttribute('data-gs-min-width', String(val));\r\n      } else {\r\n        el.removeAttribute('data-gs-min-width');\r\n      }\r\n    });\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Set the maxHeight for a widget.\r\n   * @param els widget or selector to modify.\r\n   * @param val A numeric value of the number of rows\r\n   */\r\n  public maxHeight(els: GridStackElement, val: number): GridStack {\r\n    this.getElements(els).forEach(el => {\r\n      let node = el.gridstackNode;\r\n      if (!node) { return }\r\n      if (val) {\r\n        el.setAttribute('data-gs-max-height', String(val));\r\n      } else {\r\n        el.removeAttribute('data-gs-max-height');\r\n      }\r\n    });\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Set the minHeight for a widget.\r\n   * @param els widget or selector to modify.\r\n   * @param val A numeric value of the number of rows\r\n   */\r\n  public minHeight(els: GridStackElement, val: number): GridStack {\r\n    this.getElements(els).forEach(el => {\r\n      let node = el.gridstackNode;\r\n      if (!node) { return }\r\n      if (val) {\r\n        el.setAttribute('data-gs-min-height', String(val));\r\n      } else {\r\n        el.removeAttribute('data-gs-min-height');\r\n      }\r\n    });\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Enables/Disables moving.\r\n   * @param els widget or selector to modify.\r\n   * @param val if true widget will be draggable.\r\n   */\r\n  public movable(els: GridStackElement, val: boolean): GridStack {\r\n    this.getElements(els).forEach(el => {\r\n      let node = el.gridstackNode;\r\n      if (!node) { return }\r\n      node.noMove = !(val || false);\r\n      if (node.noMove) {\r\n        this.dd.draggable(el, 'disable');\r\n        el.classList.remove('ui-draggable-handle');\r\n      } else {\r\n        this.dd.draggable(el, 'enable');\r\n        el.classList.remove('ui-draggable-handle');\r\n      }\r\n    });\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Changes widget position\r\n   * @param els  widget or singular selector to modify\r\n   * @param x new position x. If value is null or undefined it will be ignored.\r\n   * @param y new position y. If value is null or undefined it will be ignored.\r\n   */\r\n  public move(els: GridStackElement, x?: number, y?: number): GridStack {\r\n    this._updateElement(els, (el, node) => {\r\n      x = (x !== undefined) ? x : node.x;\r\n      y = (y !== undefined) ? y : node.y;\r\n\r\n      this.engine.moveNode(node, x, y, node.width, node.height);\r\n    });\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Event handler that extracts our CustomEvent data out automatically for receiving custom\r\n   * notifications (see doc for supported events)\r\n   * @param name of the event (see possible values) or list of names space separated\r\n   * @param callback function called with event and optional second/third param\r\n   * (see README documentation for each signature).\r\n   *\r\n   * @example\r\n   * grid.on('added', function(e, items) { log('added ', items)} );\r\n   * or\r\n   * grid.on('added removed change', function(e, items) { log(e.type, items)} );\r\n   *\r\n   * Note: in some cases it is the same as calling native handler and parsing the event.\r\n   * grid.el.addEventListener('added', function(event) { log('added ', event.detail)} );\r\n   *\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  public on(name: GridStackEvent, callback: (event: Event, arg2?: GridItemHTMLElement | GridStackNode[]) => void): GridStack {\r\n    // check for array of names being passed instead\r\n    if (name.indexOf(' ') !== -1) {\r\n      let names = name.split(' ') as GridStackEvent[];\r\n      names.forEach(name => this.on(name, callback));\r\n      return this;\r\n    }\r\n\r\n    if (name === 'change' || name === 'added' || name === 'removed' || name === 'enable' || name === 'disable') {\r\n      // native CustomEvent handlers - cash the generic handlers so we can easily remove\r\n      let noData = (name === 'enable' || name === 'disable');\r\n      if (noData) {\r\n        this._gsEventHandler[name] = (event: Event) => callback(event);\r\n      } else {\r\n        this._gsEventHandler[name] = (event: CustomEvent) => callback(event, event.detail);\r\n      }\r\n      this.el.addEventListener(name, this._gsEventHandler[name]);\r\n    } else if (name === 'dragstart' || name === 'dragstop' || name === 'resizestart' || name === 'resizestop' || name === 'dropped') {\r\n      // drag&drop stop events NEED to be call them AFTER we update node attributes so handle them ourself.\r\n      // do same for start event to make it easier...\r\n      this._gsEventHandler[name] = callback;\r\n    } else {\r\n      console.log('gridstack.on(' + name + ') event not supported');\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * unsubscribe from the 'on' event below\r\n   * @param name of the event (see possible values)\r\n   */\r\n  public off(name: GridStackEvent): GridStack {\r\n    // check for array of names being passed instead\r\n    if (name.indexOf(' ') !== -1) {\r\n      let names = name.split(' ') as GridStackEvent[];\r\n      names.forEach(name => this.off(name));\r\n      return this;\r\n    }\r\n\r\n    if (name === 'change' || name === 'added' || name === 'removed' || name === 'enable' || name === 'disable') {\r\n      // remove native CustomEvent handlers\r\n      if (this._gsEventHandler[name]) {\r\n        this.el.removeEventListener(name, this._gsEventHandler[name]);\r\n      }\r\n    }\r\n    delete this._gsEventHandler[name];\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes widget from the grid.\r\n   * @param el  widget or selector to modify\r\n   * @param removeDOM if `false` DOM element won't be removed from the tree (Default? true).\r\n   */\r\n  public removeWidget(els: GridStackElement, removeDOM = true): GridStack {\r\n    this.getElements(els).forEach(el => {\r\n      if (el.parentElement !== this.el) return; // not our child!\r\n      let node = el.gridstackNode;\r\n      // For Meteor support: https://github.com/gridstack/gridstack.js/pull/272\r\n      if (!node) {\r\n        node = this.engine.nodes.find(n => el === n.el);\r\n      }\r\n      if (!node) return;\r\n\r\n      // remove our DOM data (circular link) and drag&drop permanently\r\n      delete el.gridstackNode;\r\n      this.dd.draggable(el, 'destroy').resizable(el, 'destroy');\r\n\r\n      this.engine.removeNode(node, removeDOM, true); // true for trigger event\r\n    });\r\n    this._triggerRemoveEvent();\r\n    this._triggerChangeEvent();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes all widgets from the grid.\r\n   * @param removeDOM if `false` DOM elements won't be removed from the tree (Default? `true`).\r\n   */\r\n  public removeAll(removeDOM = true): GridStack {\r\n    // always remove our DOM data (circular link) before list gets emptied and drag&drop permanently\r\n    this.engine.nodes.forEach(n => {\r\n      delete n.el.gridstackNode;\r\n      this.dd.draggable(n.el, 'destroy').resizable(n.el, 'destroy');\r\n    });\r\n    this.engine.removeAll(removeDOM);\r\n    this._triggerRemoveEvent();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Changes widget size\r\n   * @param els  widget or singular selector to modify\r\n   * @param width new dimensions width. If value is null or undefined it will be ignored.\r\n   * @param height  new dimensions height. If value is null or undefined it will be ignored.\r\n   */\r\n  public resize(els: GridStackElement, width?: number, height?: number): GridStack {\r\n    this._updateElement(els, (el, node) => {\r\n      width = (width || node.width);\r\n      height = (height || node.height);\r\n\r\n      this.engine.moveNode(node, node.x, node.y, width, height);\r\n    });\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Enables/Disables resizing.\r\n   * @param els  widget or selector to modify\r\n   * @param val  if true widget will be resizable.\r\n   */\r\n  public resizable(els: GridStackElement, val: boolean): GridStack {\r\n    this.getElements(els).forEach(el => {\r\n      let node = el.gridstackNode;\r\n      if (!node) { return; }\r\n      node.noResize = !(val || false);\r\n      if (node.noResize) {\r\n        this.dd.resizable(el, 'disable');\r\n      } else {\r\n        this.dd.resizable(el, 'enable');\r\n      }\r\n    });\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Toggle the grid animation state.  Toggles the `grid-stack-animate` class.\r\n   * @param doAnimate if true the grid will animate.\r\n   */\r\n  public setAnimation(doAnimate: boolean): GridStack {\r\n    if (doAnimate) {\r\n      this.el.classList.add('grid-stack-animate');\r\n    } else {\r\n      this.el.classList.remove('grid-stack-animate');\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Toggle the grid static state. Also toggle the grid-stack-static class.\r\n   * @param staticValue if true the grid become static.\r\n   */\r\n  public setStatic(staticValue: boolean): GridStack {\r\n    this.opts.staticGrid = (staticValue === true);\r\n    this.enableMove(!staticValue);\r\n    this.enableResize(!staticValue);\r\n    this._setStaticClass();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Updates widget position/size.\r\n   * @param els  widget or singular selector to modify\r\n   * @param x new position x. If value is null or undefined it will be ignored.\r\n   * @param y new position y. If value is null or undefined it will be ignored.\r\n   * @param width new dimensions width. If value is null or undefined it will be ignored.\r\n   * @param height  new dimensions height. If value is null or undefined it will be ignored.\r\n   */\r\n  public update(els: GridStackElement, x?: number, y?: number, width?: number, height?: number): GridStack {\r\n    this._updateElement(els, (el, node) => {\r\n      x = (x !== undefined) ? x : node.x;\r\n      y = (y !== undefined) ? y : node.y;\r\n      width = (width || node.width);\r\n      height = (height || node.height);\r\n\r\n      this.engine.moveNode(node, x, y, width, height);\r\n    });\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Updates the margins which will set all 4 sides at once - see `GridstackOptions.margin` for format options.\r\n   * @param value new vertical margin value\r\n   * Note: you can instead use `marginTop | marginBottom | marginLeft | marginRight` GridstackOptions to set the sides separately.\r\n   */\r\n  public margin(value: numberOrString): GridStack {\r\n    let data = Utils.parseHeight(value);\r\n    if (this.opts.marginUnit === data.unit && this.opts.margin === data.height) {\r\n      return;\r\n    }\r\n    this.opts.marginUnit = data.unit;\r\n    this.opts.marginTop =\r\n    this.opts.marginBottom =\r\n    this.opts.marginLeft =\r\n    this.opts.marginRight =\r\n    this.opts.margin = data.height;\r\n    this._updateStyles();\r\n\r\n    return this;\r\n  }\r\n\r\n  /** returns current vertical margin value */\r\n  public getMargin(): number { return this.opts.margin as number; }\r\n\r\n  /**\r\n   * Returns true if the height of the grid will be less the vertical\r\n   * constraint. Always returns true if grid doesn't have height constraint.\r\n   * @param x new position x. If value is null or undefined it will be ignored.\r\n   * @param y new position y. If value is null or undefined it will be ignored.\r\n   * @param width new dimensions width. If value is null or undefined it will be ignored.\r\n   * @param height new dimensions height. If value is null or undefined it will be ignored.\r\n   * @param autoPosition if true then x, y parameters will be ignored and widget\r\n   * will be places on the first available position\r\n   *\r\n   * @example\r\n   * if (grid.willItFit(newNode.x, newNode.y, newNode.width, newNode.height, newNode.autoPosition)) {\r\n   *   grid.addWidget(newNode.el, newNode);\r\n   * } else {\r\n   *   alert('Not enough free space to place the widget');\r\n   * }\r\n   */\r\n  public willItFit(x: number, y: number, width: number, height: number, autoPosition: boolean): boolean {\r\n    return this.engine.canBePlacedWithRespectToHeight({x, y, width, height, autoPosition});\r\n  }\r\n\r\n  /** @internal */\r\n  private _triggerChangeEvent(skipLayoutChange?: boolean): GridStack {\r\n    if (this.engine.batchMode) { return this; }\r\n    let elements = this.engine.getDirtyNodes(true); // verify they really changed\r\n    if (elements && elements.length) {\r\n      if (!skipLayoutChange) {\r\n        this.engine.layoutsNodesChange(elements);\r\n      }\r\n      this._triggerEvent('change', elements);\r\n    }\r\n    this.engine.saveInitial(); // we called, now reset initial values & dirty flags\r\n    return this;\r\n  }\r\n\r\n  /** @internal */\r\n  private _triggerAddEvent(): GridStack {\r\n    if (this.engine.batchMode) { return this }\r\n    if (this.engine.addedNodes && this.engine.addedNodes.length > 0) {\r\n      this.engine.layoutsNodesChange(this.engine.addedNodes);\r\n      // prevent added nodes from also triggering 'change' event (which is called next)\r\n      this.engine.addedNodes.forEach(n => { delete n._dirty; });\r\n      this._triggerEvent('added', this.engine.addedNodes);\r\n      this.engine.addedNodes = [];\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /** @internal */\r\n  private _triggerRemoveEvent(): GridStack {\r\n    if (this.engine.batchMode) { return this; }\r\n    if (this.engine.removedNodes && this.engine.removedNodes.length > 0) {\r\n      this._triggerEvent('removed', this.engine.removedNodes);\r\n      this.engine.removedNodes = [];\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /** @internal */\r\n  private _triggerEvent(name: string, data?: GridStackNode[]): GridStack {\r\n    let event = data ? new CustomEvent(name, {bubbles: false, detail: data}) : new Event(name);\r\n    this.el.dispatchEvent(event);\r\n    return this;\r\n  }\r\n\r\n  /** @internal */\r\n  private _initStyles(): GridStack {\r\n    if (this._stylesId) {\r\n      Utils.removeStylesheet(this._stylesId);\r\n    }\r\n    this._stylesId = 'gridstack-style-' + (Math.random() * 100000).toFixed();\r\n    // insert style to parent (instead of 'head' by default) to support WebComponent\r\n    let styleLocation = this.opts.styleInHead ? undefined : this.el.parentNode as HTMLElement;\r\n    this._styles = Utils.createStylesheet(this._stylesId, styleLocation);\r\n    if (this._styles !== null) {\r\n      this._styles._max = 0;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /** @internal updated the CSS styles for row based layout and initial margin setting */\r\n  private _updateStyles(maxHeight?: number): GridStack {\r\n    if (!this._styles) {\r\n      return this;\r\n    }\r\n    if (maxHeight === undefined) {\r\n      maxHeight = this._styles._max;\r\n    }\r\n    this._initStyles();\r\n    this._updateContainerHeight();\r\n    if (!this.opts.cellHeight) { // The rest will be handled by CSS\r\n      return this;\r\n    }\r\n    if (this._styles._max !== 0 && maxHeight <= this._styles._max) { // Keep it increasing\r\n      return this;\r\n    }\r\n    let cellHeight = this.opts.cellHeight as number;\r\n    let cellHeightUnit = this.opts.cellHeightUnit;\r\n    let prefix = `.${this.opts._class} > .${this.opts.itemClass}`;\r\n\r\n    // these are done once only\r\n    if (this._styles._max === 0) {\r\n      Utils.addCSSRule(this._styles, prefix, `min-height: ${cellHeight}${cellHeightUnit}`);\r\n      // content margins\r\n      let top: string = this.opts.marginTop + this.opts.marginUnit;\r\n      let bottom: string = this.opts.marginBottom + this.opts.marginUnit;\r\n      let right: string = this.opts.marginRight + this.opts.marginUnit;\r\n      let left: string = this.opts.marginLeft + this.opts.marginUnit;\r\n      let content = `${prefix} > .grid-stack-item-content`;\r\n      let placeholder = `.${this.opts._class} > .grid-stack-placeholder > .placeholder-content`;\r\n      Utils.addCSSRule(this._styles, content, `top: ${top}; right: ${right}; bottom: ${bottom}; left: ${left};`);\r\n      Utils.addCSSRule(this._styles, placeholder, `top: ${top}; right: ${right}; bottom: ${bottom}; left: ${left};`);\r\n      // resize handles offset (to match margin)\r\n      Utils.addCSSRule(this._styles, `${prefix} > .ui-resizable-ne`, `right: ${right}`);\r\n      Utils.addCSSRule(this._styles, `${prefix} > .ui-resizable-e`, `right: ${right}`);\r\n      Utils.addCSSRule(this._styles, `${prefix} > .ui-resizable-se`, `right: ${right}; bottom: ${bottom}`);\r\n      Utils.addCSSRule(this._styles, `${prefix} > .ui-resizable-nw`, `left: ${left}`);\r\n      Utils.addCSSRule(this._styles, `${prefix} > .ui-resizable-w`, `left: ${left}`);\r\n      Utils.addCSSRule(this._styles, `${prefix} > .ui-resizable-sw`, `left: ${left}; bottom: ${bottom}`);\r\n    }\r\n\r\n    if (maxHeight > this._styles._max) {\r\n      let getHeight = (rows: number): string => (cellHeight * rows) + cellHeightUnit;\r\n      for (let i = this._styles._max + 1; i <= maxHeight; i++) { // start at 1\r\n        let height: string = getHeight(i);\r\n        Utils.addCSSRule(this._styles, `${prefix}[data-gs-y=\"${i-1}\"]`,        `top: ${getHeight(i-1)}`); // start at 0\r\n        Utils.addCSSRule(this._styles, `${prefix}[data-gs-height=\"${i}\"]`,     `height: ${height}`);\r\n        Utils.addCSSRule(this._styles, `${prefix}[data-gs-min-height=\"${i}\"]`, `min-height: ${height}`);\r\n        Utils.addCSSRule(this._styles, `${prefix}[data-gs-max-height=\"${i}\"]`, `max-height: ${height}`);\r\n      }\r\n      this._styles._max = maxHeight;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /** @internal */\r\n  private _updateContainerHeight(): GridStack {\r\n    if (this.engine.batchMode) { return this; }\r\n    let row = this.getRow(); // checks for minRow already\r\n    // check for css min height\r\n    let cssMinHeight = parseInt(getComputedStyle(this.el)['min-height']);\r\n    if (cssMinHeight > 0) {\r\n      let minRow =  Math.round(cssMinHeight / this.getCellHeight());\r\n      if (row < minRow) {\r\n        row = minRow;\r\n      }\r\n    }\r\n    this.el.setAttribute('data-gs-current-row', String(row));\r\n    if (row === 0) {\r\n      this.el.style.removeProperty('height');\r\n      return this;\r\n    }\r\n    let cellHeight = this.opts.cellHeight as number;\r\n    let unit = this.opts.cellHeightUnit;\r\n    if (!cellHeight) { return this }\r\n    this.el.style.height = row * cellHeight + unit;\r\n    return this;\r\n  }\r\n\r\n  /** @internal */\r\n  private _setupRemovingTimeout(el: GridItemHTMLElement): GridStack {\r\n    let node = el.gridstackNode;\r\n    if (!node || node._removeTimeout || !this.opts.removable) return this;\r\n    node._removeTimeout = setTimeout(() => {\r\n      el.classList.add('grid-stack-item-removing');\r\n      node._isAboutToRemove = true;\r\n    }, this.opts.removeTimeout);\r\n    return this;\r\n  }\r\n\r\n  /** @internal */\r\n  private _clearRemovingTimeout(el: GridItemHTMLElement): GridStack {\r\n    let node = el.gridstackNode;\r\n    if (!node || !node._removeTimeout) return this;\r\n    clearTimeout(node._removeTimeout);\r\n    delete node._removeTimeout;\r\n    el.classList.remove('grid-stack-item-removing');\r\n    delete node._isAboutToRemove;\r\n    return this;\r\n  }\r\n\r\n  /** @internal prepares the element for drag&drop **/\r\n  private _prepareElementsByNode(el: GridItemHTMLElement, node: GridStackNode): GridStack {\r\n    // variables used/cashed between the 3 start/move/end methods, in addition to node passed above\r\n    let cellWidth: number;\r\n    let cellHeight: number;\r\n\r\n    /** called when item starts moving/resizing */\r\n    let onStartMoving = (event, ui) => {\r\n      // trigger any 'dragstart' / 'resizestart' manually\r\n      if (this._gsEventHandler[event.type]) {\r\n        this._gsEventHandler[event.type](event, event.target);\r\n      }\r\n\r\n      this.engine.cleanNodes();\r\n      this.engine.beginUpdate(node);\r\n      cellWidth = this.cellWidth();\r\n      cellHeight = this.getCellHeight();\r\n\r\n      let { target } = event;\r\n\r\n      this.placeholder.setAttribute('data-gs-x', target.getAttribute('data-gs-x'));\r\n      this.placeholder.setAttribute('data-gs-y', target.getAttribute('data-gs-y'));\r\n      this.placeholder.setAttribute('data-gs-width', target.getAttribute('data-gs-width'));\r\n      this.placeholder.setAttribute('data-gs-height', target.getAttribute('data-gs-height'));\r\n      this.el.append(this.placeholder);\r\n\r\n      node.el = this.placeholder;\r\n      node._beforeDragX = node.x;\r\n      node._beforeDragY = node.y;\r\n      node._prevYPix = ui.position.top;\r\n      let minHeight = (node.minHeight || 1);\r\n\r\n      // mineHeight - Each row is cellHeight + margin\r\n      this.dd.resizable(el, 'option', 'minWidth', cellWidth * (node.minWidth || 1));\r\n      this.dd.resizable(el, 'option', 'minHeight', cellHeight * minHeight);\r\n\r\n      if (event.type === 'resizestart') {\r\n        let itemElement = target.querySelector('.grid-stack-item') as HTMLElement;\r\n        if (itemElement) {\r\n          let ev = document.createEvent('HTMLEvents');\r\n          ev.initEvent('resizestart', true, false);\r\n          itemElement.dispatchEvent(event);\r\n        }\r\n      }\r\n    }\r\n\r\n    /** called when item is being dragged/resized */\r\n    let dragOrResize = (event: Event, ui) => {\r\n      let x = Math.round(ui.position.left / cellWidth);\r\n      let y = Math.floor((ui.position.top + cellHeight / 2) / cellHeight);\r\n      let width;\r\n      let height;\r\n\r\n      if (event.type === 'drag') {\r\n        let distance = ui.position.top - node._prevYPix;\r\n        node._prevYPix = ui.position.top;\r\n        Utils.updateScrollPosition(el, ui.position, distance);\r\n        if (el.dataset.inTrashZone || x < 0 || x >= this.engine.column || y < 0 ||\r\n          (!this.engine.float && y > this.engine.getRow())) {\r\n          if (!node._temporaryRemoved) {\r\n            if (this.opts.removable === true) {\r\n              this._setupRemovingTimeout(el);\r\n            }\r\n\r\n            x = node._beforeDragX;\r\n            y = node._beforeDragY;\r\n\r\n            if (this.placeholder.parentNode === this.el) { this.el.removeChild(this.placeholder) }\r\n            this.engine.removeNode(node);\r\n            this._updateContainerHeight();\r\n\r\n            node._temporaryRemoved = true;\r\n          } else {\r\n            return;\r\n          }\r\n        } else {\r\n          this._clearRemovingTimeout(el);\r\n\r\n          if (node._temporaryRemoved) {\r\n            this.engine.addNode(node);\r\n            this._writeAttrs(this.placeholder, x, y, width, height);\r\n            this.el.appendChild(this.placeholder);\r\n            node.el = this.placeholder;\r\n            delete node._temporaryRemoved;\r\n          }\r\n        }\r\n      } else if (event.type === 'resize')  {\r\n        if (x < 0) return;\r\n        width = Math.round(ui.size.width / cellWidth);\r\n        height = Math.round((ui.size.height + this.getMargin()) / cellHeight);\r\n      }\r\n      // width and height are undefined if not resizing\r\n      let _lastTriedWidth = (width || node._lastTriedWidth);\r\n      let _lastTriedHeight = (height || node._lastTriedHeight);\r\n      if (!this.engine.canMoveNode(node, x, y, width, height) ||\r\n        (node._lastTriedX === x && node._lastTriedY === y &&\r\n        node._lastTriedWidth === _lastTriedWidth && node._lastTriedHeight === _lastTriedHeight)) {\r\n        return;\r\n      }\r\n      node._lastTriedX = x;\r\n      node._lastTriedY = y;\r\n      node._lastTriedWidth = width;\r\n      node._lastTriedHeight = height;\r\n      this.engine.moveNode(node, x, y, width, height);\r\n      this._updateContainerHeight();\r\n    }\r\n\r\n    /** called when the item stops moving/resizing */\r\n    let onEndMoving = (event: Event) => {\r\n      let target: GridItemHTMLElement = event.target as GridItemHTMLElement;\r\n      if (!target.gridstackNode) return;\r\n\r\n      // let forceNotify = false; what is the point of calling 'change' event with no data, when the 'removed' event is already called ?\r\n      if (this.placeholder.parentNode === this.el) { this.el.removeChild(this.placeholder) }\r\n      node.el = target;\r\n\r\n      if (node._isAboutToRemove) {\r\n        let gridToNotify = el.gridstackNode.grid;\r\n        if (gridToNotify._gsEventHandler[event.type]) {\r\n          gridToNotify._gsEventHandler[event.type](event, target);\r\n        }\r\n        gridToNotify.engine.removedNodes.push(node);\r\n        gridToNotify._triggerRemoveEvent();\r\n        delete el.gridstackNode;\r\n        el.remove();\r\n      } else {\r\n        this._clearRemovingTimeout(el);\r\n        if (!node._temporaryRemoved) {\r\n          Utils.removePositioningStyles(target);\r\n          this._writeAttrs(target, node.x, node.y, node.width, node.height);\r\n        } else {\r\n          Utils.removePositioningStyles(target);\r\n          this._writeAttrs(target, node._beforeDragX, node._beforeDragY, node.width, node.height);\r\n          node.x = node._beforeDragX;\r\n          node.y = node._beforeDragY;\r\n          delete node._temporaryRemoved;\r\n          this.engine.addNode(node);\r\n        }\r\n        if (this._gsEventHandler[event.type]) {\r\n          this._gsEventHandler[event.type](event, target);\r\n        }\r\n      }\r\n\r\n      this._updateContainerHeight();\r\n      this._triggerChangeEvent();\r\n\r\n      this.engine.endUpdate();\r\n\r\n      // if we re-sized a nested grid item, let the children resize as well\r\n      if (event.type === 'resizestop') {\r\n        target.querySelectorAll('.grid-stack').forEach((el: GridHTMLElement) => el.gridstack._onResizeHandler());\r\n      }\r\n    }\r\n\r\n    this.dd\r\n      .draggable(el, {\r\n        start: onStartMoving,\r\n        stop: onEndMoving,\r\n        drag: dragOrResize\r\n      })\r\n      .resizable(el, {\r\n        start: onStartMoving,\r\n        stop: onEndMoving,\r\n        resize: dragOrResize\r\n      });\r\n\r\n    if (node.noMove || this.opts.disableDrag || this.opts.staticGrid) {\r\n      this.dd.draggable(el, 'disable');\r\n    }\r\n\r\n    if (node.noResize || this.opts.disableResize || this.opts.staticGrid) {\r\n      this.dd.resizable(el, 'disable');\r\n    }\r\n\r\n    this._writeAttr(el, node);\r\n    return this;\r\n  }\r\n\r\n  /** @internal */\r\n  private _prepareElement(el: GridItemHTMLElement, triggerAddEvent = false): GridStack {\r\n    el.classList.add(this.opts.itemClass);\r\n    let node = this._readAttr(el, { el: el, grid: this });\r\n    node = this.engine.addNode(node, triggerAddEvent);\r\n    el.gridstackNode = node;\r\n\r\n    this._prepareElementsByNode(el, node);\r\n    return this;\r\n  }\r\n\r\n  /** @internal call to write x,y,w,h attributes back to element */\r\n  private _writeAttrs(el: HTMLElement, x?: number, y?: number, width?: number, height?: number): GridStack {\r\n    if (x !== undefined && x !== null) { el.setAttribute('data-gs-x', String(x)); }\r\n    if (y !== undefined && y !== null) { el.setAttribute('data-gs-y', String(y)); }\r\n    if (width) { el.setAttribute('data-gs-width', String(width)); }\r\n    if (height) { el.setAttribute('data-gs-height', String(height)); }\r\n    return this;\r\n  }\r\n\r\n  /** @internal call to write any default attributes back to element */\r\n  private _writeAttr(el: HTMLElement, node: GridStackWidget): GridStack {\r\n    if (!node) return this;\r\n    this._writeAttrs(el, node.x, node.y, node.width, node.height);\r\n\r\n    if (node.autoPosition) {\r\n      el.setAttribute('data-gs-auto-position', 'true');\r\n    } else {\r\n      el.removeAttribute('data-gs-auto-position');\r\n    }\r\n\r\n    if (node.minWidth) { el.setAttribute('data-gs-min-width', String(node.minWidth)); }\r\n    if (node.maxWidth) { el.setAttribute('data-gs-max-width', String(node.maxWidth)); }\r\n    if (node.minHeight) { el.setAttribute('data-gs-min-height', String(node.minHeight)); }\r\n    if (node.maxHeight) { el.setAttribute('data-gs-max-height', String(node.maxHeight)); }\r\n    if (node.noResize) {\r\n      el.setAttribute('data-gs-no-resize', 'true');\r\n    } else {\r\n      el.removeAttribute('data-gs-no-resize');\r\n    }\r\n\r\n    if (node.noMove) {\r\n      el.setAttribute('data-gs-no-move', 'true');\r\n    } else {\r\n      el.removeAttribute('data-gs-no-move');\r\n    }\r\n\r\n    if (node.locked) {\r\n      el.setAttribute('data-gs-locked', 'true');\r\n    } else {\r\n      el.removeAttribute('data-gs-locked');\r\n    }\r\n\r\n    if (node.resizeHandles) { el.setAttribute('data-gs-resize-handles', node.resizeHandles); }\r\n    if (node.id) { el.setAttribute('data-gs-id', String(node.id)); }\r\n    return this;\r\n  }\r\n\r\n  /** @internal call to read any default attributes from element */\r\n  private _readAttr(el: HTMLElement, node: GridStackNode = {}): GridStackWidget {\r\n    node.x = Utils.toNumber(el.getAttribute('data-gs-x'));\r\n    node.y = Utils.toNumber(el.getAttribute('data-gs-y'));\r\n    node.width = Utils.toNumber(el.getAttribute('data-gs-width'));\r\n    node.height = Utils.toNumber(el.getAttribute('data-gs-height'));\r\n    node.maxWidth = Utils.toNumber(el.getAttribute('data-gs-max-width'));\r\n    node.minWidth = Utils.toNumber(el.getAttribute('data-gs-min-width'));\r\n    node.maxHeight = Utils.toNumber(el.getAttribute('data-gs-max-height'));\r\n    node.minHeight = Utils.toNumber(el.getAttribute('data-gs-min-height'));\r\n    node.autoPosition = Utils.toBool(el.getAttribute('data-gs-auto-position'));\r\n    node.noResize = Utils.toBool(el.getAttribute('data-gs-no-resize'));\r\n    node.noMove = Utils.toBool(el.getAttribute('data-gs-no-move'));\r\n    node.locked = Utils.toBool(el.getAttribute('data-gs-locked'));\r\n    node.resizeHandles = el.getAttribute('data-gs-resize-handles');\r\n    node.id = el.getAttribute('data-gs-id');\r\n\r\n    return node;\r\n  }\r\n\r\n  /** @internal */\r\n  private _updateElement(els: GridStackElement, callback: (el: GridItemHTMLElement, node: GridStackNode) => void): GridStack {\r\n    let el = this.getElement(els);\r\n    if (!el) { return this; }\r\n    let node = el.gridstackNode;\r\n    if (!node) { return this; }\r\n\r\n    this.engine.cleanNodes();\r\n    this.engine.beginUpdate(node);\r\n\r\n    callback.call(this, el, node);\r\n\r\n    this._updateContainerHeight();\r\n    this._triggerChangeEvent();\r\n\r\n    this.engine.endUpdate();\r\n    return this;\r\n  }\r\n\r\n  /** @internal */\r\n  private _setStaticClass(): GridStack {\r\n    let staticClassName = 'grid-stack-static';\r\n\r\n    if (this.opts.staticGrid === true) {\r\n      this.el.classList.add(staticClassName);\r\n    } else {\r\n      this.el.classList.remove(staticClassName);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @internal called when we are being resized - check if the one Column Mode needs to be turned on/off\r\n   * and remember the prev columns we used.\r\n   */\r\n  private _onResizeHandler(): GridStack {\r\n    // make the cells content (minus margin) square again\r\n    if (this._isAutoCellHeight) {\r\n      Utils.throttle(() => {\r\n        let marginDiff = - (this.opts.marginRight as number) - (this.opts.marginLeft as number)\r\n          + (this.opts.marginTop as number) + (this.opts.marginBottom as number);\r\n        this.cellHeight(this.cellWidth() + marginDiff);\r\n      }, 100);\r\n    }\r\n\r\n    if (!this.opts.disableOneColumnMode && this.el.clientWidth <= this.opts.minWidth) {\r\n      if (this._oneColumnMode) { return this }\r\n      this._oneColumnMode = true;\r\n      this.column(1);\r\n    } else {\r\n      if (!this._oneColumnMode) { return this }\r\n      delete this._oneColumnMode;\r\n      this.column(this._prevColumn);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /** @internal call to setup dragging in from the outside (say toolbar), with options */\r\n  private _setupDragIn():  GridStack {\r\n    if (!this.opts.staticGrid && typeof this.opts.dragIn === 'string') {\r\n      if (!this.dd.isDraggable(this.opts.dragIn)) {\r\n        this.dd.dragIn(this.opts.dragIn, this.opts.dragInOptions);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /** @internal called to setup a trash drop zone if the user specifies it */\r\n  private _setupRemoveDrop(): GridStack {\r\n    if (!this.opts.staticGrid && typeof this.opts.removable === 'string') {\r\n      let trashZone = document.querySelector(this.opts.removable) as HTMLElement;\r\n      if (!trashZone) return this;\r\n      if (!this.dd.isDroppable(trashZone)) {\r\n        this.dd.droppable(trashZone, this.opts.removableOptions);\r\n      }\r\n      this.dd\r\n        .on(trashZone, 'dropover', (event, el) => {\r\n          let node = el.gridstackNode;\r\n          if (!node || node.grid !== this) return;\r\n          el.dataset.inTrashZone = 'true';\r\n          this._setupRemovingTimeout(el);\r\n        })\r\n        .on(trashZone, 'dropout', (event, el) => {\r\n          let node = el.gridstackNode;\r\n          if (!node || node.grid !== this) return;\r\n          delete el.dataset.inTrashZone;\r\n          this._clearRemovingTimeout(el);\r\n        });\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /** @internal called to add drag over support to support widgets */\r\n  private _setupAcceptWidget(): GridStack {\r\n    if (this.opts.staticGrid || !this.opts.acceptWidgets) return this;\r\n\r\n    let onDrag = (event, el: GridItemHTMLElement) => {\r\n      let node = el.gridstackNode;\r\n      let pos = this.getCellFromPixel({left: event.pageX, top: event.pageY}, true);\r\n      let x = Math.max(0, pos.x);\r\n      let y = Math.max(0, pos.y);\r\n      if (!node._added) {\r\n        node._added = true;\r\n\r\n        node.el = el;\r\n        node.x = x;\r\n        node.y = y;\r\n        delete node.autoPosition;\r\n        this.engine.cleanNodes();\r\n        this.engine.beginUpdate(node);\r\n        this.engine.addNode(node);\r\n\r\n        this._writeAttrs(this.placeholder, node.x, node.y, node.width, node.height);\r\n        this.el.appendChild(this.placeholder);\r\n        node.el = this.placeholder; // dom we update while dragging...\r\n        node._beforeDragX = node.x;\r\n        node._beforeDragY = node.y;\r\n\r\n        this._updateContainerHeight();\r\n      } else if ((x !== node.x || y !== node.y) && this.engine.canMoveNode(node, x, y)) {\r\n        this.engine.moveNode(node, x, y);\r\n        this._updateContainerHeight();\r\n      }\r\n    };\r\n\r\n    this.dd\r\n      .droppable(this.el, {\r\n        accept: (el: GridItemHTMLElement) => {\r\n          let node: GridStackNode = el.gridstackNode;\r\n          if (node && node.grid === this) {\r\n            return false;\r\n          }\r\n          if (typeof this.opts.acceptWidgets === 'function') {\r\n            return this.opts.acceptWidgets(el);\r\n          }\r\n          let selector = (this.opts.acceptWidgets === true ? '.grid-stack-item' : this.opts.acceptWidgets as string);\r\n          return el.matches(selector);\r\n        }\r\n      })\r\n      .on(this.el, 'dropover', (event, el: GridItemHTMLElement) => {\r\n        let width, height;\r\n\r\n        // see if we already have a node with widget/height and check for attributes\r\n        let node = el.gridstackNode;\r\n        if (!node || !node.width || !node.height) {\r\n          let w = parseInt(el.getAttribute('data-gs-width'));\r\n          if (w > 0) { node = node || {}; node.width = w; }\r\n          let h = parseInt(el.getAttribute('data-gs-height'));\r\n          if (h > 0) { node = node || {}; node.height = h; }\r\n        }\r\n\r\n        // if not calculate the grid size based on element outer size\r\n        let cellWidth = this.cellWidth();\r\n        let cellHeight = this.getCellHeight();\r\n        width = node && node.width ? node.width : Math.ceil(el.offsetWidth / cellWidth);\r\n        height = node && node.height ? node.height : Math.round(el.offsetHeight / cellHeight);\r\n\r\n        let newNode = this.engine.prepareNode({width, height, _added: false, _temporary: true});\r\n        newNode._isOutOfGrid = true;\r\n        el.gridstackNode = newNode;\r\n        el._gridstackNodeOrig = node;\r\n\r\n        this.dd.on(el, 'drag', onDrag);\r\n        return false; // prevent parent from receiving msg (which may be grid as well)\r\n      })\r\n      .on(this.el, 'dropout', (event, el: GridItemHTMLElement) => {\r\n        // jquery-ui bug. Must verify widget is being dropped out\r\n        // check node variable that gets set when widget is out of grid\r\n        let node = el.gridstackNode;\r\n        if (!node || !node._isOutOfGrid) {\r\n          return;\r\n        }\r\n        this.dd.off(el, 'drag');\r\n        node.el = null;\r\n        this.engine.removeNode(node);\r\n        if (this.placeholder.parentNode === this.el) {\r\n          this.el.removeChild(this.placeholder);\r\n        }\r\n        this._updateContainerHeight();\r\n        el.gridstackNode = el._gridstackNodeOrig;\r\n        return false; // prevent parent from receiving msg (which may be grid as well)\r\n      })\r\n      .on(this.el, 'drop', (event, _el: GridItemHTMLElement) => {\r\n        if (this.placeholder.parentNode === this.el) {\r\n          this.el.removeChild(this.placeholder);\r\n        }\r\n        let node: GridStackNode = _el.gridstackNode;\r\n        this.engine.cleanupNode(node);\r\n        node.grid = this;\r\n        let originalNode = _el._gridstackNodeOrig;\r\n        delete _el.gridstackNode;\r\n        delete _el._gridstackNodeOrig;\r\n        this.dd\r\n          .off(_el, 'drag')\r\n          .draggable(_el, 'destroy')\r\n          .resizable(_el, 'destroy');\r\n\r\n        let el = _el.cloneNode(true) as GridItemHTMLElement;\r\n\r\n        el.gridstackNode = node;\r\n        if (originalNode && originalNode.grid) {\r\n          originalNode.grid._triggerRemoveEvent();\r\n        }\r\n        _el.remove();\r\n        node.el = el;\r\n        Utils.removePositioningStyles(el);\r\n\r\n        this._writeAttr(el, node);\r\n        this.el.appendChild(el);\r\n        this._prepareElementsByNode(el, node);\r\n        this._updateContainerHeight();\r\n        this.engine.addedNodes.push(node);\r\n        this._triggerAddEvent();\r\n        this._triggerChangeEvent();\r\n\r\n        this.engine.endUpdate();\r\n        if (this._gsEventHandler['dropped']) {\r\n          this._gsEventHandler['dropped']({type: 'dropped'}, originalNode, node);\r\n        }\r\n        return false; // prevent parent from receiving msg (which may be grid as well)\r\n      });\r\n    return this;\r\n  }\r\n\r\n  /** @internal */\r\n  private getElement(els: GridStackElement = '.grid-stack-item'): GridItemHTMLElement {\r\n    return (typeof els === 'string' ?\r\n      (document.querySelector(els) || document.querySelector('#' + els) || document.querySelector('.' + els)) : els);\r\n  }\r\n  /** @internal */\r\n  private getElements(els: GridStackElement = '.grid-stack-item'): GridItemHTMLElement[] {\r\n    if (typeof els === 'string') {\r\n      let list = document.querySelectorAll(els);\r\n      if (!list.length) { list = document.querySelectorAll('.' + els) }\r\n      if (!list.length) { list = document.querySelectorAll('#' + els) }\r\n      return Array.from(list) as GridItemHTMLElement[];\r\n    }\r\n    return [els];\r\n  }\r\n  /** @internal */\r\n  private static getGridElement(els: string | HTMLElement = '.grid-stack'): GridHTMLElement {\r\n    return (typeof els === 'string' ?\r\n      (document.querySelector(els) || document.querySelector('#' + els) || document.querySelector('.' + els)) : els);\r\n  }\r\n  /** @internal */\r\n  private static getGridElements(els: string | HTMLElement = '.grid-stack'): GridHTMLElement[] {\r\n    if (typeof els === 'string') {\r\n      let list = document.querySelectorAll(els);\r\n      if (!list.length) { list = document.querySelectorAll('.' + els) }\r\n      if (!list.length) { list = document.querySelectorAll('#' + els) }\r\n      return Array.from(list) as GridHTMLElement[];\r\n    }\r\n    return [els];\r\n  }\r\n\r\n  /** @internal initialize margin top/bottom/left/right and units */\r\n  private initMargin(): GridStack {\r\n    let data = Utils.parseHeight(this.opts.margin);\r\n    this.opts.marginUnit = data.unit;\r\n    let margin = this.opts.margin = data.height;\r\n\r\n    // see if top/bottom/left/right need to be set as well\r\n    if (this.opts.marginTop === undefined) {\r\n      this.opts.marginTop = margin;\r\n    } else {\r\n      data = Utils.parseHeight(this.opts.marginTop);\r\n      this.opts.marginTop = data.height;\r\n      delete this.opts.margin;\r\n    }\r\n\r\n    if (this.opts.marginBottom === undefined) {\r\n      this.opts.marginBottom = margin;\r\n    } else {\r\n      data = Utils.parseHeight(this.opts.marginBottom);\r\n      this.opts.marginBottom = data.height;\r\n      delete this.opts.margin;\r\n    }\r\n\r\n    if (this.opts.marginRight === undefined) {\r\n      this.opts.marginRight = margin;\r\n    } else {\r\n      data = Utils.parseHeight(this.opts.marginRight);\r\n      this.opts.marginRight = data.height;\r\n      delete this.opts.margin;\r\n    }\r\n\r\n    if (this.opts.marginLeft === undefined) {\r\n      this.opts.marginLeft = margin;\r\n    } else {\r\n      data = Utils.parseHeight(this.opts.marginLeft);\r\n      this.opts.marginLeft = data.height;\r\n      delete this.opts.margin;\r\n    }\r\n    this.opts.marginUnit = data.unit; // in case side were spelled out, use those units instead...\r\n    return this;\r\n  }\r\n\r\n  // legacy method renames\r\n  /** @internal */\r\n  private setGridWidth = obsolete(this, GridStack.prototype.column, 'setGridWidth', 'column', 'v0.5.3');\r\n  /** @internal */\r\n  private setColumn = obsolete(this, GridStack.prototype.column, 'setColumn', 'column', 'v0.6.4');\r\n  /** @internal */\r\n  private getGridHeight =  obsolete(this, GridStackEngine.prototype.getRow, 'getGridHeight', 'getRow', 'v1.0.0');\r\n}\r\n"]}